---
title: "Button"
desc: "A flexible, accessible button component with customizable styling and auto color contrast."
category: "Components"
order: 4
---
<script>
import { Nora } from "../../../lib/index.ts";
</script>

## Features

- **Accessible design** - Full keyboard support and ARIA attributes
- **Customizable styling** - Configurable colors and dimensions
- **Auto color contrast** - Automatically determines text color based on background
- **Click handling** - Easy event handling with onClick prop
- **Semantic HTML** - Uses proper button elements for accessibility
- **Hover effects** - Built-in interactive hover states

## Basic Usage

```svelte
<script>
    import { Nora } from 'nora-kit';
</script>

<Nora.Button>Button</Nora.Button>
```

## Props

| Prop | Type | Default | Description |
|------|------|---------|-------------|
| `bgColour` | `string` | `"3b82f6"` | Background color as hex string (without #) |
| `id` | `string` | `undefined` | Optional HTML id attribute |
| `onClick` | `function` | `undefined` | Click event handler function |
| `disabled` | `boolean` | `false` | Whether the button is disabled |
| `type` | `string` | `"button"` | Button type (button, submit, reset) |

## Examples

### Basic Button
<div class="flex justify-center items-center mt-15 mb-15">
    <Nora.Button>Default Button</Nora.Button>
</div>

```svelte
<Nora.Button>Default Button</Nora.Button>
```

### Custom Color Button

<div class="flex justify-center items-center mt-15 mb-15">
    <Nora.Button bgColour="f57a81" id="pinkButton">
        Pink Button
    </Nora.Button>
</div>

```svelte
<Nora.Button bgColour="f57a81" id="pinkButton" onClick={handleClick}>
    Pink Button
</Nora.Button>
```

### Multiple Button Colors

<div class="flex justify-center items-center gap-4 mt-15 mb-15">
    <Nora.Button bgColour="10b981">
        Success
    </Nora.Button>
    <Nora.Button bgColour="ef4444">
        Danger
    </Nora.Button>
    <Nora.Button bgColour="f59e0b">
        Warning
    </Nora.Button>
</div>

```svelte
<div class="flex gap-4">
    <Nora.Button bgColour="10b981" onClick={handleClick}>
        Success
    </Nora.Button>
    <Nora.Button bgColour="ef4444" onClick={handleClick}>
        Danger
    </Nora.Button>
    <Nora.Button bgColour="f59e0b" onClick={handleClick}>
        Warning
    </Nora.Button>
</div>
```

### Button with ID

```svelte
<Nora.Button id="specialButton" bgColour="8b5cf6" onClick={handleSpecialAction}>
    Special Action
</Nora.Button>
```

## Accessibility

The button component includes full accessibility support:

- **Semantic HTML**: Uses native `<button>` elements for proper screen reader support
- **Keyboard Navigation**: Native button keyboard behavior (Enter and Space activation)
- **ARIA Attributes**: Proper `aria-disabled` state when disabled
- **Focus Management**: Clear focus indicators with keyboard navigation
- **Color Contrast**: Automatic text color calculation ensures readable contrast ratios

### Keyboard Controls

| Key | Action |
|-----|--------|
| `Enter` | Activate the button |
| `Space` | Activate the button |
| `Tab` | Navigate to/from the button |

## Event Handling

The button component accepts an `onClick` function that will be called when the button is clicked:

```svelte
<script>
    function handleButtonClick() {
        // Your click logic here
        console.log('Button was clicked!');
    }
</script>

<Nora.Button onClick={handleButtonClick}>
    Click Handler Example
</Nora.Button>
```

## Styling Notes

- The component uses a hex color format without the `#` symbol for the `bgColour` prop
- Text color is automatically determined based on the background luminance for optimal contrast
- Disabled buttons automatically receive reduced opacity and pointer-events disabled
- The component includes hover effects that slightly darken the background on interaction
- Focus states include a subtle ring for keyboard navigation accessibility

## Browser Support

This component uses modern web standards and supports all modern browsers:

- Native button element behavior
- CSS transitions for hover effects
- CSS transform support for interactive states
- Modern color contrast calculation algorithms